{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modules/reportviewer/reportviewer.component.css","webpack:///./src/app/modules/reportviewer/reportviewer.component.html","webpack:///./src/app/modules/reportviewer/reportviewer.component.ts","webpack:///./src/app/modules/reportviewer/reportviewer.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n.page-content {\\r\\n    padding-top: 10px;\\r\\n    width: 75%;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 480px) {\\r\\n    .page-content {\\r\\n        width: 100%;\\r\\n        margin-left: 10px;\\r\\n        margin-right: 10px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.demo-card-wide.mdl-card {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.report-container {\\r\\n    height: 500px;\\r\\n    margin: 1em;\\r\\n}\"","module.exports = \"<div mdl class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-header mdl-layout--no-drawer-button\\\">\\r\\n    <header class=\\\"mdl-layout__header\\\">\\r\\n        <div class=\\\"mdl-layout__header-row\\\">\\r\\n            <span class=\\\"mdl-layout-title\\\">ngx-ssrs-reportviewer</span>\\r\\n        </div>\\r\\n    </header>\\r\\n    <main class=\\\"mdl-layout__content\\\">\\r\\n        <div class=\\\"page-content\\\">\\r\\n            <div *ngIf=\\\"error\\\" class=\\\"error mb\\\">\\r\\n                {{ error.message | json }}\\r\\n            </div>\\r\\n            <div class=\\\"demo-card-wide mdl-card mdl-shadow--2dp\\\">\\r\\n                <div class=\\\"mdl-card__title\\\">\\r\\n                        <h4>Angular 2+ SSRS Reportviewer</h4>\\r\\n                </div>\\r\\n                <div class=\\\"report-container\\\">\\r\\n                      <ssrs-reportviewer [reportserver]=\\\"reportServer\\\" [reporturl]=\\\"reportUrl\\\" [showparameters]=\\\"showParameters\\\" [parameters]=\\\"parameters\\\" [language]=\\\"language\\\" [width]=\\\"width\\\" [height]=\\\"height\\\" [toolbar]=\\\"toolbar\\\" ></ssrs-reportviewer>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ssrs',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  reportServer: string = 'http://reportserver/reportserver';\r\n  reportUrl: string = 'Departments/General Reports/SampleWithParameters';\r\n  showParameters: string = \"false\"; //true, false, collapsed\r\n  parameters: any = {\r\n    \"SampleStringParameter\": \"String\",\r\n    \"SampleBooleanParameter\": false,\r\n    \"SampleDateTimeParameter\": \"10/1/2017\",\r\n    \"SampleIntParameter\": 12345,\r\n    \"SampleFloatParameter\": \"123.1234\",\r\n    \"SampleMultipleStringParameter\": [\"Parameter1\", \"Parameter2\"]\r\n  };\r\n  language: string = \"en-us\";\r\n  width: number = 50;\r\n  height: number = 50;\r\n  toolbar: string = \"false\";\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SSRSReportViewerModule } from './modules/reportviewer/reportviewer.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    SSRSReportViewerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".ssrs-reportviewer {\\r\\n  overflow-x:hidden;\\r\\n  overflow-Y:hidden;\\r\\n  position: relative;\\r\\n  left: 0px;\\r\\n  top: 0px;\\r\\n}\"","module.exports = \"\\r\\n    <iframe [src]=\\\"source\\\" class=\\\"ssrs-reportviewer\\\" [style.width.%]=\\\"width\\\" [style.height.%]=\\\"height\\\" scrolling=\\\"no\\\"> \\r\\n\"","import {\r\n  Component, Input, Output, ElementRef, EventEmitter, OnChanges, SimpleChanges\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'ssrs-reportviewer',\r\n  templateUrl: './reportviewer.component.html',\r\n  styleUrls: ['./reportviewer.component.css']\r\n})\r\nexport class ReportViewerComponent implements OnChanges {\r\n\r\n\r\n  @Input()\r\n  reporturl: string;\r\n  @Input()\r\n  reportserver: string;\r\n  @Input()\r\n  showparameters?: string = \"false\";\r\n  @Input()\r\n  parameters?: any;\r\n  @Input()\r\n  language?: string = \"en-us\";\r\n  @Input()\r\n  width?: number = 100;\r\n  @Input()\r\n  height?: number = 100;\r\n  @Input()\r\n  toolbar?: string = \"true\";\r\n\r\n\r\n  @Output('error') onError = new EventEmitter<any>();\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n\r\n  source: SafeResourceUrl;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if(!this.reporturl){\r\n      this.onError.emit(\"Src cannot be null\");\r\n    }\r\n\r\n    if ('reporturl' in changes) {\r\n      this.source = this.sanitizer\r\n      .bypassSecurityTrustResourceUrl(this.buildReportUrl());\r\n    }\r\n  }\r\n\r\n  public buildParameterString(): string {\r\n\r\n    var parameterString = \"\";\r\n\r\n    for (var param in this.parameters) {\r\n      if (param) {\r\n        if (this.parameters[param] instanceof Array === true) {\r\n          for (var arrayParam in this.parameters[param]) {\r\n            if (arrayParam) {\r\n              parameterString += \"&\" + param + \"=\" + this.parameters[param][arrayParam];\r\n            }\r\n          }\r\n        }\r\n        if (this.parameters[param] != null && this.parameters[param] instanceof Array === false) {\r\n          parameterString += \"&\" + param + \"=\" + this.parameters[param];\r\n        }\r\n        if (this.parameters[param] == null) {\r\n          parameterString += \"&\" + param + \":isnull=true\";\r\n        }\r\n      }\r\n    }\r\n    return parameterString;\r\n  }\r\n\r\n  public buildReportUrl() : string {\r\n    if (!this.reporturl) {\r\n      return;\r\n    }\r\n    var parameters = this.buildParameterString();\r\n    return this.reportserver + '?/'\r\n      + this.reporturl + '&rs:Embed=true'\r\n      + '&rc:Parameters=' + this.showparameters\r\n      + parameters\r\n      + '&rs:ParameterLanguage=' + this.language + \"&rc:Toolbar=\" + this.toolbar;\r\n\r\n     \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportViewerComponent } from './reportviewer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [ReportViewerComponent],\r\n  exports: [\r\n    ReportViewerComponent\r\n  ]\r\n})\r\nexport class SSRSReportViewerModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}